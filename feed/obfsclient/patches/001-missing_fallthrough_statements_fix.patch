--- a/src/main.cc
+++ b/src/main.cc
@@ -55,6 +55,16 @@
 
 _INITIALIZE_EASYLOGGINGPP
 
+#if defined __has_cpp_attribute
+    #if __has_cpp_attribute(fallthrough)
+        #define FALLTHROUGH [[fallthrough]]
+    #else
+        #define FALLTHROUGH
+    #endif
+#else
+    #define FALLTHROUGH
+#endif
+
 namespace {
 
 enum class LogLevel {
@@ -167,12 +177,16 @@ void init_logging(const ::std::string& p
     switch(min_log_level) {
     case LogLevel::kDEBUG:
       conf.set(::el::Level::Debug, ::el::ConfigurationType::Enabled, "true");
+      FALLTHROUGH;
     case LogLevel::kINFO:
       conf.set(::el::Level::Info, ::el::ConfigurationType::Enabled, "true");
+      FALLTHROUGH;
     case LogLevel::kWARNING:
       conf.set(::el::Level::Warning, ::el::ConfigurationType::Enabled, "true");
+      FALLTHROUGH;
     case LogLevel::kERROR:
       conf.set(::el::Level::Error, ::el::ConfigurationType::Enabled, "true");
+      FALLTHROUGH;
     default:
       conf.set(::el::Level::Fatal, ::el::ConfigurationType::Enabled, "true");
     }
@@ -344,6 +358,7 @@ int main(int argc, char* argv[]) {
         for (auto iter = servers->begin(); iter != servers->end(); ++iter)
           (*iter)->close_sessions();
         // FALLSTHROUGH
+        FALLTHROUGH;
       default:
         ::event_base_loopbreak(ev_base);
         break;
