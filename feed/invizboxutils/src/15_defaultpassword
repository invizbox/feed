#!/bin/sh

# Copyright 2021 InvizBox Ltd
#
# Licensed under the InvizBox Shared License;
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        https://www.invizbox.com/lic/license.txt

load_settings() {
    if [ "${DEVICE_PRODUCT}" = "InvizBox" ]; then
        wifi_password=$(dd if=/dev/mtd2 bs=1 skip=65522 count=14)
        openvpn_password=$(dd if=/dev/mtd2 bs=1 skip=65498 count=24 | tr -d ' ')
        openvpn_username=$(dd if=/dev/mtd2 bs=1 skip=65434 count=64 | tr -d ' ')
        hard_ipsec_password=$(dd if=/dev/mtd2 bs=1 skip=65410 count=24 | tr -d ' ')
        hard_ipsec_username=$(dd if=/dev/mtd2 bs=1 skip=65346 count=64 | tr -d ' ')
        plan=$(dd if=/dev/mtd2 bs=1 skip=65326 count=20 | tr -d ' ')
        hard_provider_id=$(dd if=/dev/mtd2 bs=1 skip=65306 count=20 | tr -d ' ')
        return 0
    elif [ "${DEVICE_PRODUCT}" = "InvizBox Go" ]; then
        wifi_password=$(dd if=/dev/mtd2 bs=1 skip=65520 count=16)
        openvpn_password=$(dd if=/dev/mtd2 bs=1 skip=65496 count=24 | tr -d ' ')
        openvpn_username=$(dd if=/dev/mtd2 bs=1 skip=65432 count=64 | tr -d ' ')
        hard_ipsec_password=$(dd if=/dev/mtd2 bs=1 skip=65408 count=24 | tr -d ' ')
        hard_ipsec_username=$(dd if=/dev/mtd2 bs=1 skip=65344 count=64 | tr -d ' ')
        plan=$(dd if=/dev/mtd2 bs=1 skip=65324 count=20 | tr -d ' ')
        hard_provider_id=$(dd if=/dev/mtd2 bs=1 skip=65304 count=20 | tr -d ' ')
        return 0
    elif [ "${DEVICE_PRODUCT}" = "InvizBox 2" ]; then
        wifi_password=$(cat /private/wifi_password.txt)
        read -r openvpn_username openvpn_password plan </private/vpn_credentials.txt
        read -r hard_ipsec_username hard_ipsec_password </private/ipsec_credentials.txt
        hard_provider_id=$(cat /private/provider.txt)
        return 0
    else
        return 1
    fi
}

set_provider() {
    if [ -n "$(uci get vpn.active.provider)" ]; then
        provider_id=$(uci get vpn.active.provider)
    else
        provider_id="invizbox"
        pre_update_version=$(uci get update.version.firmware)
        if [ "$(version "${pre_update_version}")" -lt "$(version 4.1.0)" ] && [ -n "$(uci get update.urls.nearest_cities)" ]; then
            nearest_provider_id=$(uci get update.urls.nearest_cities | cut -d '/' -f 3)
            if validate_string_ascii "${nearest_provider_id}" && [ -n "${nearest_provider_id}" ]; then
                provider_id=${nearest_provider_id}
            fi
        fi
        if validate_string_ascii "${hard_provider_id}" && [ -n "${hard_provider_id}" ]; then
            provider_id=${hard_provider_id}
        else
            if [ "${DEVICE_PRODUCT}" = "InvizBox" ]; then
                write_string_to_mtd2 "${provider_id}" 20 65306
            elif [ "${DEVICE_PRODUCT}" = "InvizBox Go" ]; then
                write_string_to_mtd2 "${provider_id}" 20 65304
            elif [ "${DEVICE_PRODUCT}" = "InvizBox 2" ]; then
                echo -n "${provider_id}" >/private/provider.txt
            fi
        fi
        uci set vpn.active.provider=${provider_id}
    fi
}

set_factory_password () {
    etc_dir=$1
    if grep -q "TOKENPASSWORD" "${etc_dir}/config/wireless"; then
        tar -zxvf "${etc_dir}/providers/${provider_id}.tar.gz" -C /
        if validate_string_ascii "${wifi_password}"; then
            passwd root <<EOF
${wifi_password}
${wifi_password}
EOF
            uci_wifi_password=$(echo ${wifi_password} | sed -e "s/'/'\\\''/g")
            escaped_uci_wifi_password=$(echo ${uci_wifi_password} | sed -e 's/[&\\/]/\\&/g; s/$/\\/' -e '$s/\\$//')
            sed -i "s/TOKENPASSWORD/${escaped_uci_wifi_password}/g" "${etc_dir}/config/wireless"
            sed -i "s/TOKENPASSWORD/${escaped_uci_wifi_password}/g" "${etc_dir}/config/rest-api"
        fi
    fi
    rm -rf "${etc_dir}/providers"
}

set_openvpn_credentials () {
    if [ -z "$(uci get vpn.active.username)" ]; then
        if validate_string_ascii "${openvpn_username}"; then
            uci set vpn.active.username="${openvpn_username}"
            if validate_string_ascii "${plan}" && [ -n "${plan}" ]; then
                uci set vpn.active.plan="${plan}"
            fi
            uci commit vpn
        fi
    fi
    if [ "${provider_id}" = "protonvpn" ]; then
        openvpn_username="${openvpn_username}+pib"
    fi

    if [ "${DEVICE_PRODUCT}" = "InvizBox" ] || [ "${DEVICE_PRODUCT}" = "InvizBox Go" ]; then
        if [ -z "$(uci get vpn.active.password)" ]; then
            if validate_string_ascii "${openvpn_password}"; then
                uci set vpn.active.password="${openvpn_password}"
                uci commit vpn
            fi
        fi
    fi

    if [ ! -s /etc/openvpn/login.auth ]; then
        if validate_string_ascii "${openvpn_username}" && validate_string_ascii "${openvpn_password}"; then
            echo -e "${openvpn_username}\n${openvpn_password}" >/etc/openvpn/login.auth
        fi
    fi
}

set_ipsec_credentials () {
    if [ "$(uci get ipsec.vpn_1.eap_identity)" = "TOKENIDENTITY" ]; then
        if [ "${provider_id}" = "expressvpn" ] || [ "${provider_id}" = "windscribe" ]; then
            ipsec_username=${hard_ipsec_username}
            ipsec_password=${hard_ipsec_password}
        else
            ipsec_username=${openvpn_username}
            ipsec_password=${openvpn_password}
            if [ "${DEVICE_PRODUCT}" = "InvizBox" ]; then
                write_string_to_mtd2 "" 64 65346
                write_string_to_mtd2 "" 24 65410
            elif [ "${DEVICE_PRODUCT}" = "InvizBox Go" ]; then
                write_string_to_mtd2 "" 64 65344
                write_string_to_mtd2 "" 24 65408
            elif [ "${DEVICE_PRODUCT}" = "InvizBox 2" ]; then
                rm -f /private/ipsec_credentials.txt
            fi
        fi
        if validate_string_ascii "${ipsec_username}"; then
            sed -i "s/TOKENIDENTITY/${ipsec_username}/g" /etc/config/ipsec
        fi
        if validate_string_ascii "${ipsec_password}"; then
            escaped_ipsec_password=$(echo ${ipsec_password} | sed -e 's/[&\\/]/\\&/g; s/$/\\/' -e '$s/\\$//')
            sed -i "s/TOKENPASSWORD/${escaped_ipsec_password}/g" /etc/config/ipsec
        fi
    fi
}

main () {
    . /etc/device_info
    . /bin/invizboxutils.sh

    if ! load_settings; then
        return 1
    fi
    set_provider
    set_factory_password /etc
    set_openvpn_credentials
    set_ipsec_credentials
    return 0
}

if [ $# -eq 0 ]; then
    main
fi
