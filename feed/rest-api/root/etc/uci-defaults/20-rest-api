#!/bin/ash

# Copyright 2018 InvizBox Ltd
#
# Licensed under the InvizBox Shared License;
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        https://www.invizbox.com/lic/license.txt

. /lib/functions.sh
function version { printf "%03d%03d%03d" $(echo "$1" | tr '.' ' '); }

uci set rest-api.version=version
uci set rest-api.version.api=%V
uci commit rest-api

openssl x509 -in /etc/lighttpd/inviz.box.pem -noout 2>/dev/null
if [ $? -ne 0 ]; then
    openssl req \
    -x509 \
    -config /etc/openssl-inviz.box.config \
    -newkey rsa:4096 \
    -nodes \
    -days 5844 \
    -keyout /tmp/inviz.box.key \
    -out /tmp/inviz.box.crt

    # create pem file
    cat /tmp/inviz.box.key /tmp/inviz.box.crt > /etc/lighttpd/inviz.box.pem
fi

if [ ! -s /etc/jwt_secret ]; then
    dd if=/dev/urandom skip=0 count=32 bs=1 | hexdump -e '"%x"' > /etc/jwt_secret
fi

pre_update_version=$(uci get update.version.firmware)
if [ $(version ${pre_update_version}) -lt $(version 0.0.41) ]; then
    # add protocol IDs if needed (from IPSec onwards)
    protocol_id=openvpn_tcp_443
    ip_protocol=TCP
    port=443
    provider=$(uci get update.urls.nearest_cities | cut -d '/' -f 3)
    if [ "${provider}" == "expressvpn" ]; then
        protocol_id=openvpn_udp_1195
        ip_protocol=UDP
        port=1195
    elif [ "${provider}" == "pia" ]; then
        protocol_id=openvpn_tcp_501
        ip_protocol=TCP
        port=501
    elif [ "${provider}" == "vanishedvpn" ]; then
        protocol_id=openvpn_udp_1194
        ip_protocol=UDP
        port=1194
    fi

    set_protocol_id_if_missing()
    {
        local id
        config_get id "$1" "protocol_id" "missing"
        if [ "$id" == "missing" ]; then
            uci add_list vpn.$1.protocol_id=$protocol_id
            if [ "${provider}" == "windscribe" ]; then
                uci add_list vpn.$1.protocol_id=ikev2_ipsec
            fi
        fi
    }

    first_protocol_id=$(grep -m1 "config protocol" /etc/config/vpn | awk '{print $3}' | cut -d "'" -f 2)
    if [ "$first_protocol_id" == "" ]; then
        uci set vpn.$protocol_id=protocol
        uci set vpn.$protocol_id.vpn_protocol=OpenVPN
        uci set vpn.$protocol_id.ip_protocol=$ip_protocol
        uci set vpn.$protocol_id.port=$port
        if [ "${provider}" == "windscribe" ]; then
            uci set vpn.ikev2_ipsec=protocol
            uci set vpn.ikev2_ipsec.vpn_protocol=IKEv2
            uci set vpn.ikev2_ipsec.ip_protocol=IPSec
            uci set vpn.ikev2_ipsec.port=50
        fi
    fi
    servers=$(grep "config server" /etc/config/vpn | awk '{print $3}' | cut -d "'" -f 2)
    for server in $servers
    do
        set_protocol_id_if_missing $server
    done
    uci commit vpn
fi

if [ $(version ${pre_update_version}) -lt $(version 0.1.0) ]; then
    rewrite_protocol()
    {
        vpn_protocol=$(uci get vpn.$1.vpn_protocol)
        ip_protocol=$(uci get vpn.$1.ip_protocol)
        port=$(uci get vpn.$1.port)
        uci set vpn.$1.name="$vpn_protocol over $ip_protocol port $port"
        uci set vpn.$1.template="$first_template"
        for server in $(uci get dhcp.vpn1.server)
        do
            case "$server" in
                *@tun1) uci add_list vpn.$1.dns_server="${server::-5}" ;;
            esac
        done
        uci del vpn.$1.ip_protocol
        uci del vpn.$1.port
    }

    first_template=$(grep -m1 "option template" /etc/config/vpn | awk '{print $3}' | cut -d "'" -f 2)
    sed -ie "/option template/d" /etc/config/vpn
    protocols=$(grep "config protocol" /etc/config/vpn | awk '{print $3}' | cut -d "'" -f 2)
    for protocol in $protocols
    do
        rewrite_protocol $protocol
    done
    uci commit vpn
fi
